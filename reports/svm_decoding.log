Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from nilearn.decoding import FREMClassifier
frem = FREMClassifier(estimator='svc', cv=5, mask=mask_filename, scoring='f1')
frem.fit(func_file, y)
plotting.view_img(
    frem.coef_img_['face'], bg_img=haxby_dataset.anat[0],
    title="SVM weights for face", dim=-1, resampling_interpolation='nearest'
)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[11], line 3[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mnilearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdecoding[39;00m [38;5;28;01mimport[39;00m FREMClassifier
[1;32m      2[0m frem [38;5;241m=[39m FREMClassifier(estimator[38;5;241m=[39m[38;5;124m'[39m[38;5;124msvc[39m[38;5;124m'[39m, cv[38;5;241m=[39m[38;5;241m5[39m, mask[38;5;241m=[39mmask_filename, scoring[38;5;241m=[39m[38;5;124m'[39m[38;5;124mf1[39m[38;5;124m'[39m)
[0;32m----> 3[0m [43mfrem[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mfunc_file[49m[43m,[49m[43m [49m[43my[49m[43m)[49m
[1;32m      4[0m plotting[38;5;241m.[39mview_img(
[1;32m      5[0m     frem[38;5;241m.[39mcoef_img_[[38;5;124m'[39m[38;5;124mface[39m[38;5;124m'[39m], bg_img[38;5;241m=[39mhaxby_dataset[38;5;241m.[39manat[[38;5;241m0[39m],
[1;32m      6[0m     title[38;5;241m=[39m[38;5;124m"[39m[38;5;124mSVM weights for face[39m[38;5;124m"[39m, dim[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m, resampling_interpolation[38;5;241m=[39m[38;5;124m'[39m[38;5;124mnearest[39m[38;5;124m'[39m
[1;32m      7[0m )

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nilearn/decoding/decoder.py:526[0m, in [0;36m_BaseDecoder.fit[0;34m(self, X, y, groups)[0m
[1;32m    518[0m     warnings[38;5;241m.[39mwarn(
[1;32m    519[0m         [38;5;124m"[39m[38;5;124mAfter clustering and screening, the decoding model will [39m[38;5;124m"[39m
[1;32m    520[0m         [38;5;124m"[39m[38;5;124mbe trained only on [39m[38;5;132;01m{}[39;00m[38;5;124m features. [39m[38;5;124m"[39m[38;5;241m.[39mformat(n_final_features)
[1;32m    521[0m         [38;5;241m+[39m [38;5;124m"[39m[38;5;124mConsider raising clustering_percentile or [39m[38;5;124m"[39m
[1;32m    522[0m         [38;5;241m+[39m [38;5;124m"[39m[38;5;124mscreening_percentile parameters[39m[38;5;124m"[39m, [38;5;167;01mUserWarning[39;00m)
[1;32m    524[0m parallel [38;5;241m=[39m Parallel(n_jobs[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mn_jobs, verbose[38;5;241m=[39m[38;5;241m2[39m [38;5;241m*[39m [38;5;28mself[39m[38;5;241m.[39mverbose)
[0;32m--> 526[0m parallel_fit_outputs [38;5;241m=[39m [43mparallel[49m[43m([49m
[1;32m    527[0m [43m    [49m[43mdelayed[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_cache[49m[43m([49m[43m_parallel_fit[49m[43m)[49m[43m)[49m[43m([49m
[1;32m    528[0m [43m        [49m[43mestimator[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mestimator[49m[43m,[49m
[1;32m    529[0m [43m        [49m[43mX[49m[38;5;241;43m=[39;49m[43mX[49m[43m,[49m[43m [49m[43my[49m[38;5;241;43m=[39;49m[43my[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[43mc[49m[43m][49m[43m,[49m[43m [49m[43mtrain[49m[38;5;241;43m=[39;49m[43mtrain[49m[43m,[49m[43m [49m[43mtest[49m[38;5;241;43m=[39;49m[43mtest[49m[43m,[49m
[1;32m    530[0m [43m        [49m[43mparam_grid[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparam_grid[49m[43m,[49m
[1;32m    531[0m [43m        [49m[43mis_classification[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mis_classification[49m[43m,[49m[43m [49m[43mselector[49m[38;5;241;43m=[39;49m[43mselector[49m[43m,[49m
[1;32m    532[0m [43m        [49m[43mscorer[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mscorer_[49m[43m,[49m[43m [49m[43mmask_img[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmask_img_[49m[43m,[49m[43m [49m[43mclass_index[49m[38;5;241;43m=[39;49m[43mc[49m[43m,[49m
[1;32m    533[0m [43m        [49m[43mclustering_percentile[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mclustering_percentile[49m[43m)[49m
[1;32m    534[0m [43m    [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mc[49m[43m,[49m[43m [49m[43m([49m[43mtrain[49m[43m,[49m[43m [49m[43mtest[49m[43m)[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mitertools[49m[38;5;241;43m.[39;49m[43mproduct[49m[43m([49m
[1;32m    535[0m [43m        [49m[38;5;28;43mrange[39;49m[43m([49m[43mn_problems[49m[43m)[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcv_[49m[43m)[49m[43m)[49m
[1;32m    537[0m coefs, intercepts [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_fetch_parallel_fit_outputs(
[1;32m    538[0m     parallel_fit_outputs, y, n_problems)
[1;32m    540[0m [38;5;66;03m# Build the final model (the aggregated one)[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/parallel.py:1085[0m, in [0;36mParallel.__call__[0;34m(self, iterable)[0m
[1;32m   1076[0m [38;5;28;01mtry[39;00m:
[1;32m   1077[0m     [38;5;66;03m# Only set self._iterating to True if at least a batch[39;00m
[1;32m   1078[0m     [38;5;66;03m# was dispatched. In particular this covers the edge[39;00m
[0;32m   (...)[0m
[1;32m   1082[0m     [38;5;66;03m# was very quick and its callback already dispatched all the[39;00m
[1;32m   1083[0m     [38;5;66;03m# remaining jobs.[39;00m
[1;32m   1084[0m     [38;5;28mself[39m[38;5;241m.[39m_iterating [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[0;32m-> 1085[0m     [38;5;28;01mif[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdispatch_one_batch[49m[43m([49m[43miterator[49m[43m)[49m:
[1;32m   1086[0m         [38;5;28mself[39m[38;5;241m.[39m_iterating [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_original_iterator [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[1;32m   1088[0m     [38;5;28;01mwhile[39;00m [38;5;28mself[39m[38;5;241m.[39mdispatch_one_batch(iterator):

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/parallel.py:901[0m, in [0;36mParallel.dispatch_one_batch[0;34m(self, iterator)[0m
[1;32m    899[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mFalse[39;00m
[1;32m    900[0m [38;5;28;01melse[39;00m:
[0;32m--> 901[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_dispatch[49m[43m([49m[43mtasks[49m[43m)[49m
[1;32m    902[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/parallel.py:819[0m, in [0;36mParallel._dispatch[0;34m(self, batch)[0m
[1;32m    817[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39m_lock:
[1;32m    818[0m     job_idx [38;5;241m=[39m [38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39m_jobs)
[0;32m--> 819[0m     job [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_backend[49m[38;5;241;43m.[39;49m[43mapply_async[49m[43m([49m[43mbatch[49m[43m,[49m[43m [49m[43mcallback[49m[38;5;241;43m=[39;49m[43mcb[49m[43m)[49m
[1;32m    820[0m     [38;5;66;03m# A job can complete so quickly than its callback is[39;00m
[1;32m    821[0m     [38;5;66;03m# called before we get here, causing self._jobs to[39;00m
[1;32m    822[0m     [38;5;66;03m# grow. To ensure correct results ordering, .insert is[39;00m
[1;32m    823[0m     [38;5;66;03m# used (rather than .append) in the following line[39;00m
[1;32m    824[0m     [38;5;28mself[39m[38;5;241m.[39m_jobs[38;5;241m.[39minsert(job_idx, job)

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/_parallel_backends.py:208[0m, in [0;36mSequentialBackend.apply_async[0;34m(self, func, callback)[0m
[1;32m    206[0m [38;5;28;01mdef[39;00m [38;5;21mapply_async[39m([38;5;28mself[39m, func, callback[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    207[0m     [38;5;124;03m"""Schedule a func to be run"""[39;00m
[0;32m--> 208[0m     result [38;5;241m=[39m [43mImmediateResult[49m[43m([49m[43mfunc[49m[43m)[49m
[1;32m    209[0m     [38;5;28;01mif[39;00m callback:
[1;32m    210[0m         callback(result)

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/_parallel_backends.py:597[0m, in [0;36mImmediateResult.__init__[0;34m(self, batch)[0m
[1;32m    594[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m([38;5;28mself[39m, batch):
[1;32m    595[0m     [38;5;66;03m# Don't delay the application, to avoid keeping the input[39;00m
[1;32m    596[0m     [38;5;66;03m# arguments in memory[39;00m
[0;32m--> 597[0m     [38;5;28mself[39m[38;5;241m.[39mresults [38;5;241m=[39m [43mbatch[49m[43m([49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/parallel.py:288[0m, in [0;36mBatchedCalls.__call__[0;34m(self)[0m
[1;32m    284[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m):
[1;32m    285[0m     [38;5;66;03m# Set the default nested backend to self._backend but do not set the[39;00m
[1;32m    286[0m     [38;5;66;03m# change the default number of processes to -1[39;00m
[1;32m    287[0m     [38;5;28;01mwith[39;00m parallel_backend([38;5;28mself[39m[38;5;241m.[39m_backend, n_jobs[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_n_jobs):
[0;32m--> 288[0m         [38;5;28;01mreturn[39;00m [func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    289[0m                 [38;5;28;01mfor[39;00m func, args, kwargs [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mitems]

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/parallel.py:288[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m    284[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m):
[1;32m    285[0m     [38;5;66;03m# Set the default nested backend to self._backend but do not set the[39;00m
[1;32m    286[0m     [38;5;66;03m# change the default number of processes to -1[39;00m
[1;32m    287[0m     [38;5;28;01mwith[39;00m parallel_backend([38;5;28mself[39m[38;5;241m.[39m_backend, n_jobs[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_n_jobs):
[0;32m--> 288[0m         [38;5;28;01mreturn[39;00m [[43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    289[0m                 [38;5;28;01mfor[39;00m func, args, kwargs [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mitems]

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/joblib/memory.py:349[0m, in [0;36mNotMemorizedFunc.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    348[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 349[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nilearn/decoding/decoder.py:175[0m, in [0;36m_parallel_fit[0;34m(estimator, X, y, train, test, param_grid, is_classification, selector, scorer, mask_img, class_index, clustering_percentile)[0m
[1;32m    172[0m     n_clusters [38;5;241m=[39m [38;5;28mint[39m(X_train[38;5;241m.[39mshape[[38;5;241m1[39m] [38;5;241m*[39m clustering_percentile [38;5;241m/[39m [38;5;241m100.[39m)
[1;32m    173[0m     clustering [38;5;241m=[39m ReNA(mask_img, n_clusters[38;5;241m=[39mn_clusters, n_iter[38;5;241m=[39m[38;5;241m20[39m,
[1;32m    174[0m                       threshold[38;5;241m=[39m[38;5;241m1e-7[39m, scaling[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[0;32m--> 175[0m     X_train [38;5;241m=[39m [43mclustering[49m[38;5;241;43m.[39;49m[43mfit_transform[49m[43m([49m[43mX_train[49m[43m)[49m
[1;32m    176[0m     X_test [38;5;241m=[39m clustering[38;5;241m.[39mtransform(X_test)
[1;32m    178[0m do_screening [38;5;241m=[39m (X_train[38;5;241m.[39mshape[[38;5;241m1[39m] [38;5;241m>[39m [38;5;241m100[39m) [38;5;129;01mand[39;00m selector [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/sklearn/base.py:852[0m, in [0;36mTransformerMixin.fit_transform[0;34m(self, X, y, **fit_params)[0m
[1;32m    848[0m [38;5;66;03m# non-optimized default implementation; override when a better[39;00m
[1;32m    849[0m [38;5;66;03m# method is possible for a given clustering algorithm[39;00m
[1;32m    850[0m [38;5;28;01mif[39;00m y [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    851[0m     [38;5;66;03m# fit method of arity 1 (unsupervised transformation)[39;00m
[0;32m--> 852[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mfit_params[49m[43m)[49m[38;5;241m.[39mtransform(X)
[1;32m    853[0m [38;5;28;01melse[39;00m:
[1;32m    854[0m     [38;5;66;03m# fit method of arity 2 (supervised transformation)[39;00m
[1;32m    855[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mfit(X, y, [38;5;241m*[39m[38;5;241m*[39mfit_params)[38;5;241m.[39mtransform(X)

File [0;32m/opt/hostedtoolcache/Python/3.8.15/x64/lib/python3.8/site-packages/nilearn/regions/rena_clustering.py:496[0m, in [0;36mReNA.fit[0;34m(self, X, y)[0m
[1;32m    491[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mThe mask image should be a Niimg-like[39m[38;5;124m"[39m
[1;32m    492[0m                      [38;5;124m"[39m[38;5;124mobject. Instead a [39m[38;5;132;01m%s[39;00m[38;5;124m object was provided.[39m[38;5;124m"[39m
[1;32m    493[0m                      [38;5;241m%[39m [38;5;28mtype[39m([38;5;28mself[39m[38;5;241m.[39mmask_img))
[1;32m    495[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmemory [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m [38;5;28misinstance[39m([38;5;28mself[39m[38;5;241m.[39mmemory, [38;5;28mstr[39m):
[0;32m--> 496[0m     [38;5;28mself[39m[38;5;241m.[39mmemory_ [38;5;241m=[39m [43mMemory[49m[43m([49m[43mcachedir[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmemory[49m[43m,[49m
[1;32m    497[0m [43m                          [49m[43mverbose[49m[38;5;241;43m=[39;49m[38;5;28;43mmax[39;49m[43m([49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mverbose[49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[38;5;241;43m1[39;49m[43m)[49m[43m)[49m
[1;32m    498[0m [38;5;28;01melse[39;00m:
[1;32m    499[0m     [38;5;28mself[39m[38;5;241m.[39mmemory_ [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mmemory

[0;31mTypeError[0m: __init__() got an unexpected keyword argument 'cachedir'
TypeError: __init__() got an unexpected keyword argument 'cachedir'

